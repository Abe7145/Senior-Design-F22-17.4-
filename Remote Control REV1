/*
   -- Hearthstone windows finalREV EAST --
   
   This source code of graphical user interface 
   has been generated automatically by RemoteXY editor.
   To compile this code using RemoteXY library 3.1.8 or later version 
   download by link http://remotexy.com/en/library/
   To connect using RemoteXY mobile app by link http://remotexy.com/en/download/                   
     - for ANDROID 4.11.1 or later version;
     - for iOS 1.9.1 or later version;
    
   This source code is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.    
*/

//////////////////////////////////////////////
//        RemoteXY include library          //
//////////////////////////////////////////////

// RemoteXY select connection mode and include library 
#define REMOTEXY_MODE__ESP8266_HARDSERIAL_POINT

#include <RemoteXY.h>

// RemoteXY connection settings 
#define REMOTEXY_SERIAL Serial
#define REMOTEXY_SERIAL_SPEED 115200
#define REMOTEXY_WIFI_SSID "Hearthstone Windows EAST"
#define REMOTEXY_WIFI_PASSWORD "12345678"
#define REMOTEXY_SERVER_PORT 6377


// RemoteXY configurate  
#pragma pack(push, 1)
uint8_t RemoteXY_CONF[] =   // 462 bytes
  { 255,19,0,33,0,199,1,16,27,5,130,1,21,92,23,7,0,28,130,1,
  33,48,29,43,0,28,130,1,32,1,30,20,0,28,130,1,1,48,31,43,
  0,28,130,1,2,1,29,20,0,28,129,0,6,3,19,3,0,94,67,76,
  79,83,69,47,79,80,69,78,0,7,52,34,9,26,7,0,12,26,4,67,
  4,8,54,17,8,0,12,26,11,129,0,4,78,24,3,0,94,67,85,82,
  82,32,80,79,83,32,51,32,40,73,78,41,0,1,0,10,6,14,14,0,
  4,31,0,129,0,33,3,39,3,0,94,83,69,84,32,79,80,69,78,32,
  80,79,83,32,40,73,78,41,0,131,1,9,23,45,10,1,29,12,72,101,
  97,114,116,104,115,116,111,110,101,0,131,0,15,31,34,10,2,29,12,87,
  105,110,100,111,119,115,0,129,0,4,50,24,3,0,94,67,85,82,82,32,
  80,79,83,32,49,32,40,73,78,41,0,129,0,4,64,24,3,0,94,67,
  85,82,82,32,80,79,83,32,50,32,40,73,78,41,0,67,4,8,68,17,
  8,0,12,26,11,67,4,8,82,18,8,0,12,26,11,2,0,40,53,17,
  5,0,36,26,31,31,79,78,0,79,70,70,0,1,0,51,72,7,7,0,
  36,31,0,1,0,51,82,7,7,0,36,31,0,7,36,39,62,18,5,0,
  36,26,36,11,3,3,38,69,7,20,0,36,26,129,0,36,50,23,3,0,
  36,77,65,78,85,65,76,32,77,79,68,69,0,129,0,39,60,18,2,0,
  36,83,69,84,32,83,80,69,69,68,32,40,48,45,50,53,53,41,0,129,
  0,48,80,13,2,0,36,66,65,67,75,87,65,82,68,83,0,129,0,49,
  70,11,2,0,36,70,79,82,87,65,82,68,83,0,129,0,35,77,2,4,
  0,36,50,0,129,0,35,84,2,4,0,36,51,0,129,0,35,71,2,4,
  0,36,49,0,1,0,38,93,5,5,0,2,31,0,131,0,26,39,13,6,
  3,29,12,69,97,115,116,0,129,0,23,94,13,4,0,2,82,69,83,69,
  84,0 };
  
// this structure defines all the variables and events of your control interface 
struct {

    // input variables
  int16_t maxOpenPos;  // 32767.. +32767 
  uint8_t windowPosFlag; // =1 if button pressed, else =0 
  uint8_t manFlag; // =1 if switch ON and =0 if OFF 
  uint8_t backwardsMAN; // =1 if button pressed, else =0 
  uint8_t forwardsMAN; // =1 if button pressed, else =0 
  char setSpeedMAN[11];  // string UTF8 end zero  
  uint8_t selectWindowMAN; // =0 if select position A, =1 if position B, =2 if position C, ... 
  uint8_t resetFlag; // =1 if button pressed, else =0 

    // output variables
  char currPos1[11];  // string UTF8 end zero 
  char currPos2[11];  // string UTF8 end zero 
  char currPos3[11];  // string UTF8 end zero 

    // other variable
  uint8_t connect_flag;  // =1 if wire connected, else =0 

} RemoteXY;
#pragma pack(pop)
